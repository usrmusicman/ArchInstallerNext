#!/bin/sh

# <<-- Globals -->>

## Start of package lists

# BASE SYSTEM
BASE_SYSTEM="7zip alsa-utils avahi bash-completion btrfs-progs cpupower cups cups-browsed cups-filters cups-pdf cups-pk-helper dbus-broker dosfstools efibootmgr exfatprogs f2fs-tools fastfetch fatresize ffmpeg firewalld git gnu-free-fonts grub grub-btrfs gst-plugin-pipewire gst-plugins-bad gst-plugins-base gst-plugins-good gst-plugins-ugly gst-plugin-va lib32-gst-plugins-base lib32-gst-plugins-base-libs lib32-gst-plugins-good lib32-ocl-icd lib32-pipewire-jack lib32-pipewire-v4l2 libva-utils linux-firmware man-db man-pages mkinitcpio mkinitcpio-firmware mtools multilib-devel net-tools networkmanager ntfs-3g ocl-icd pipewire-alsa pipewire-audio pipewire-ffado pipewire-jack pipewire-libcamera pipewire-pulse pipewire-session-manager pipewire-v4l2 plymouth pulse-native-provider realtime-privileges rtirq sshfs sudo udisks2 udisks2-btrfs vim vim-runtime wget wireless-regdb wireplumber xfsprogs"

# PLASMA DESKTOP
DESKTOP_SESSION="appmenu-gtk-module breeze5 ebook-tools ffmpegthumbs flatpak fwupd gamemode gst-libav gst-plugin-libcamera gst-plugins-espeak hunspell gwenview hunspell-en_au hunspell-en_ca hunspell-en_gb hunspell-en_us i2c-tools icoutils kate kcalc kdeconnect kdegraphics-thumbnailers kdenetwork-filesharing kdialog keditbookmarks kimageformats kio-admin kio-extras kio-gdrive kio5-extras konsole kwalletmanager kwayland-integration lib32-gamemode lib32-mangohud libappimage libappindicator-gtk2 libappindicator-gtk3 libdbusmenu-glib libdbusmenu-gtk2 libdbusmenu-gtk3 libdbusmenu-qt5 libgpod libportal libportal-gtk3 libportal-gtk4 libportal-qt5 libportal-qt6 mangohud noto-fonts noto-fonts-cjk noto-fonts-emoji openrgb-git orca oxygen5 partitionmanager plasma plasma5-integration phonon-qt5-vlc phonon-qt6-vlc pocl power-profiles-daemon power-profiles-daemon qbittorrent qpwgraph qt5-imageformats qt5-svg qt5-wayland qt6-imageformats qt6-multimedia-ffmpeg qt6-multimedia-gstreamer qt6-svg qt6-wayland quota-tools sane sane-airscan simple-scan spectacle switcheroo-control ttf-ms-fonts unrar usb_modeswitch usbguard xdg-desktop-portal-gtk xf86-input-evdev xf86-input-libinput yt-dlp"

## End of package lists

cachyos_post_install() {

    # Install base system
    pacman -S --noconfirm $BASE_SYSTEM

    # Refresh package database (Chroot)
    pacman -Syyuu --noconfirm

    ## Make vim the default system-wide editor
    echo "EDITOR=/usr/bin/vim" >> $MOUNT_DIR/etc/environment

    # Enable system services
    systemctl enable avahi-daemon.service
    systemctl enable avahi-dnsconfd.service
    systemctl enable cpupower.service
    systemctl enable cronie.service
    systemctl enable cups.service
    systemctl enable cups-browsed.service
    systemctl enable dbus-broker.service
    systemctl enable grub-btrfsd.service
    systemctl enable NetworkManager.service
    systemctl enable rtirq.service
    systemctl enable rtirq-resume.service
    systemctl enable rtkit-daemon.service

    # Add user to groups
    gpasswd -a $USERNAME audio
    gpasswd -a $USERNAME cups
    gpasswd -a $USERNAME realtime
    gpasswd -a $USERNAME video


}

setup_desktop_session() {

    # Install Plasma desktop
    pacman -S --noconfirm $DESKTOP_SESSION

    # Enable system services
    systemctl enable bluetooth.service
    systemctl enable power-profiles-daemon.service
    systemctl enable sddm.service

    # Add user to groups
    gpasswd -a $USERNAME flatpak
    gpasswd -a $USERNAME games
    gpasswd -a $USERNAME sddm

}

# <<-- Main Menu -->>

# Make sure to run the script as root
if [[ "$USER" == "root" ]]; then

    ## Intialize the bootstrap environment
    while :
    do

        clear
        echo "CachyOS Post installer setup"
        echo ""
        read -r -p "Do you want to run the post-install script (Type: yes or no): " MENU_OPTION
        echo ""
        read -r -p "Type in your username (i.e. myusername): " USERNAME
        clear

        if [[ "$MENU_OPTION" == "yes" ]]; then
            clear
            echo ""
            echo "Starting CachyOS post install..."
            clear
            cachyos_post_install
            sleep 2
            break
        elif [[ "$MENU_OPTION" == "no" ]]; then
            sleep 2
            exit
        else
            echo ""
            echo "Type in a valid option, restarting...."
            sleep 5
        fi

    done

    ## Choose desktop environment
    while :
    do

        clear
        read -p "Choose a desktop environment or window manager (options: none, plasma): " DESKTOP_ENV

        # Check which desktop you want to use
        if [[ "${DESKTOP_ENV}" == "none" ]]; then
            clear
            echo ""
            echo "No desktop environment installed..."
            sleep 2
        elif [[ "${DESKTOP_ENV}" == "plasma" ]]; then
            clear
            setup_desktop_session
            echo ""
            echo "Installed the desktop environment..."
            sleep 2
            break
        else
            echo ""
            echo "Type in a valid option"
            sleep 2
        fi

    done

else
    echo "Please be root to run this script..."
fi
